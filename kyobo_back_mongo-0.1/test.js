{
        _events: [Object: null prototype] {},
        _eventsCount: 0,
        _maxListeners: undefined,
        res: <ref *1> IncomingMessage {
          _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
            pipes: [],
            flowing: true,
            ended: true,
            endEmitted: true,
            reading: false,
            constructed: true,
            sync: true,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            errorEmitted: false,
            emitClose: true,
            autoDestroy: true,
            destroyed: true,
            errored: null,
            closed: true,
            closeEmitted: true,
            defaultEncoding: 'utf8',
            awaitDrainWriters: null,
            multiAwaitDrain: false,
            readingMore: true,
            dataEmitted: true,
            decoder: [StringDecoder],
            encoding: 'utf8',
            [Symbol(kPaused)]: false
          },
          _events: [Object: null prototype] {
            end: [Array],
            data: [Array],
            error: [Array],
            close: [Function: bound emit]
          },
          _eventsCount: 4,
          _maxListeners: undefined,
          socket: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 7,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [ClientRequest],
            [Symbol(async_id_symbol)]: 357,
            [Symbol(kHandle)]: [TCP],
            [Symbol(kSetNoDelay)]: true,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(RequestTimeout)]: undefined
          },
          httpVersionMajor: 1,
          httpVersionMinor: 1,
          httpVersion: '1.1',
          complete: true,
          rawHeaders: [
            'X-Powered-By',
            'Express',
            'Access-Control-Allow-Origin',
            '*',
            'Content-Type',
            'application/json; charset=utf-8',
            'Content-Length',
            '46',
            'ETag',
            'W/"2e-X3zJs0jkIN5bQQ47uekEYThPoWI"',
            'Date',
            'Sat, 19 Feb 2022 14:28:16 GMT',
            'Connection',
            'close'
          ],
          rawTrailers: [],
          aborted: false,
          upgrade: false,
          url: '',
          method: null,
          statusCode: 500,
          statusMessage: 'Internal Server Error',
          client: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 7,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [ClientRequest],
            [Symbol(async_id_symbol)]: 357,
            [Symbol(kHandle)]: [TCP],
            [Symbol(kSetNoDelay)]: true,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(RequestTimeout)]: undefined
          },
          _consuming: false,
          _dumped: false,
          req: ClientRequest {
            _events: [Object: null prototype],
            _eventsCount: 3,
            _maxListeners: undefined,
            outputData: [],
            outputSize: 0,
            writable: true,
            destroyed: false,
            _last: true,
            chunkedEncoding: false,
            shouldKeepAlive: false,
            maxRequestsOnConnectionReached: false,
            _defaultKeepAlive: true,
            useChunkedEncodingByDefault: false,
            sendDate: false,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: 0,
            _hasBody: true,
            _trailer: '',
            finished: true,
            _headerSent: true,
            _closed: false,
            socket: [Socket],
            _header: 'GET /books/6210ddbec9d100f41a460311 HTTP/1.1\r\n' +
              'Host: 127.0.0.1:59278\r\n' +
              'Accept-Encoding: gzip, deflate\r\n' +
              'Connection: close\r\n' +
              '\r\n',
            _keepAliveTimeout: 0,
            _onPendingData: [Function: nop],
            agent: [Agent],
            socketPath: undefined,
            method: 'GET',
            maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
            path: '/books/6210ddbec9d100f41a460311',
            _ended: true,
            res: [Circular *1],
            aborted: false,
            timeoutCb: null,
            upgradeOrConnect: false,
            parser: null,
            maxHeadersCount: null,
            reusedSocket: false,
            host: '127.0.0.1',
            protocol: 'http:',
            [Symbol(kCapture)]: false,
            [Symbol(kNeedDrain)]: false,
            [Symbol(corked)]: 0,
            [Symbol(kOutHeaders)]: [Object: null prototype]
          },
          text: '{"message":"Maximum call stack size exceeded"}',
          [Symbol(kCapture)]: false,
          [Symbol(kHeaders)]: {
            'x-powered-by': 'Express',
            'access-control-allow-origin': '*',
            'content-type': 'application/json; charset=utf-8',
            'content-length': '46',
            etag: 'W/"2e-X3zJs0jkIN5bQQ47uekEYThPoWI"',
            date: 'Sat, 19 Feb 2022 14:28:16 GMT',
            connection: 'close'
          },
          [Symbol(kHeadersCount)]: 14,
          [Symbol(kTrailers)]: null,
          [Symbol(kTrailersCount)]: 0,
          [Symbol(RequestTimeout)]: undefined
        },
        request: Test {
          _events: [Object: null prototype] { abort: [Function (anonymous)] },
          _eventsCount: 1,
          _maxListeners: undefined,
          _enableHttp2: false,
          _agent: false,
          _formData: null,
          method: 'GET',
          url: 'http://127.0.0.1:59278/books/6210ddbec9d100f41a460311',
          _header: {},
          header: {},
          writable: true,
          _redirects: 0,
          _maxRedirects: 0,
          cookies: '',
          qs: {},
          _query: [],
          qsRaw: [],
          _redirectList: [],
          _streamRequest: false,
          _buffer: true,
          app: Server {
            maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 0,
            _handle: null,
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 0,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            maxRequestsPerSocket: 0,
            headersTimeout: 60000,
            requestTimeout: 0,
            _connectionKey: '6::::0',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(kCapture)]: false,
            [Symbol(async_id_symbol)]: 355
          },
          _asserts: [],
          _server: Server {
            maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 0,
            _handle: null,
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 0,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            maxRequestsPerSocket: 0,
            headersTimeout: 60000,
            requestTimeout: 0,
            _connectionKey: '6::::0',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(kCapture)]: false,
            [Symbol(async_id_symbol)]: 355
          },
          req: ClientRequest {
            _events: [Object: null prototype],
            _eventsCount: 3,
            _maxListeners: undefined,
            outputData: [],
            outputSize: 0,
            writable: true,
            destroyed: false,
            _last: true,
            chunkedEncoding: false,
            shouldKeepAlive: false,
            maxRequestsOnConnectionReached: false,
            _defaultKeepAlive: true,
            useChunkedEncodingByDefault: false,
            sendDate: false,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: 0,
            _hasBody: true,
            _trailer: '',
            finished: true,
            _headerSent: true,
            _closed: false,
            socket: [Socket],
            _header: 'GET /books/6210ddbec9d100f41a460311 HTTP/1.1\r\n' +
              'Host: 127.0.0.1:59278\r\n' +
              'Accept-Encoding: gzip, deflate\r\n' +
              'Connection: close\r\n' +
              '\r\n',
            _keepAliveTimeout: 0,
            _onPendingData: [Function: nop],
            agent: [Agent],
            socketPath: undefined,
            method: 'GET',
            maxHeaderSize: undefined,
            insecureHTTPParser: undefined,
            path: '/books/6210ddbec9d100f41a460311',
            _ended: true,
            res: [IncomingMessage],
            aborted: false,
            timeoutCb: null,
            upgradeOrConnect: false,
            parser: null,
            maxHeadersCount: null,
            reusedSocket: false,
            host: '127.0.0.1',
            protocol: 'http:',
            [Symbol(kCapture)]: false,
            [Symbol(kNeedDrain)]: false,
            [Symbol(corked)]: 0,
            [Symbol(kOutHeaders)]: [Object: null prototype]
          },
          protocol: 'http:',
          host: '127.0.0.1:59278',
          _endCalled: true,
          _callback: [Function (anonymous)],
          _fullfilledPromise: Promise { [Circular *2] },
          res: <ref *1> IncomingMessage {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            socket: [Socket],
            httpVersionMajor: 1,
            httpVersionMinor: 1,
            httpVersion: '1.1',
            complete: true,
            rawHeaders: [Array],
            rawTrailers: [],
            aborted: false,
            upgrade: false,
            url: '',
            method: null,
            statusCode: 500,
            statusMessage: 'Internal Server Error',
            client: [Socket],
            _consuming: false,
            _dumped: false,
            req: [ClientRequest],
            text: '{"message":"Maximum call stack size exceeded"}',
            [Symbol(kCapture)]: false,
            [Symbol(kHeaders)]: [Object],
            [Symbol(kHeadersCount)]: 14,
            [Symbol(kTrailers)]: null,
            [Symbol(kTrailersCount)]: 0,
            [Symbol(RequestTimeout)]: undefined
          },
          _resBuffered: true,
          response: [Circular *2],
          called: true,
          [Symbol(kCapture)]: false
        },
        req: <ref *3> ClientRequest {
          _events: [Object: null prototype] {
            drain: [Function],
            error: [Function (anonymous)],
            prefinish: [Function: requestOnPrefinish]
          },
          _eventsCount: 3,
          _maxListeners: undefined,
          outputData: [],
          outputSize: 0,
          writable: true,
          destroyed: false,
          _last: true,
          chunkedEncoding: false,
          shouldKeepAlive: false,
          maxRequestsOnConnectionReached: false,
          _defaultKeepAlive: true,
          useChunkedEncodingByDefault: false,
          sendDate: false,
          _removedConnection: false,
          _removedContLen: false,
          _removedTE: false,
          _contentLength: 0,
          _hasBody: true,
          _trailer: '',
          finished: true,
          _headerSent: true,
          _closed: false,
          socket: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 7,
            _maxListeners: undefined,
            _writableState: [WritableState],
            allowHalfOpen: false,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            parser: null,
            _httpMessage: [Circular *3],
            [Symbol(async_id_symbol)]: 357,
            [Symbol(kHandle)]: [TCP],
            [Symbol(kSetNoDelay)]: true,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: null,
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kCapture)]: false,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(RequestTimeout)]: undefined
          },
          _header: 'GET /books/6210ddbec9d100f41a460311 HTTP/1.1\r\n' +
            'Host: 127.0.0.1:59278\r\n' +
            'Accept-Encoding: gzip, deflate\r\n' +
            'Connection: close\r\n' +
            '\r\n',
          _keepAliveTimeout: 0,
          _onPendingData: [Function: nop],
          agent: Agent {
            _events: [Object: null prototype],
            _eventsCount: 2,
            _maxListeners: undefined,
            defaultPort: 80,
            protocol: 'http:',
            options: [Object: null prototype],
            requests: [Object: null prototype] {},
            sockets: [Object: null prototype],
            freeSockets: [Object: null prototype] {},
            keepAliveMsecs: 1000,
            keepAlive: false,
            maxSockets: Infinity,
            maxFreeSockets: 256,
            scheduling: 'lifo',
            maxTotalSockets: Infinity,
            totalSocketCount: 1,
            [Symbol(kCapture)]: false
          },
          socketPath: undefined,
          method: 'GET',
          maxHeaderSize: undefined,
          insecureHTTPParser: undefined,
          path: '/books/6210ddbec9d100f41a460311',
          _ended: true,
          res: <ref *1> IncomingMessage {
            _readableState: [ReadableState],
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            socket: [Socket],
            httpVersionMajor: 1,
            httpVersionMinor: 1,
            httpVersion: '1.1',
            complete: true,
            rawHeaders: [Array],
            rawTrailers: [],
            aborted: false,
            upgrade: false,
            url: '',
            method: null,
            statusCode: 500,
            statusMessage: 'Internal Server Error',
            client: [Socket],
            _consuming: false,
            _dumped: false,
            req: [Circular *3],
            text: '{"message":"Maximum call stack size exceeded"}',
            [Symbol(kCapture)]: false,
            [Symbol(kHeaders)]: [Object],
            [Symbol(kHeadersCount)]: 14,
            [Symbol(kTrailers)]: null,
            [Symbol(kTrailersCount)]: 0,
            [Symbol(RequestTimeout)]: undefined
          },
          aborted: false,
          timeoutCb: null,
          upgradeOrConnect: false,
          parser: null,
          maxHeadersCount: null,
          reusedSocket: false,
          host: '127.0.0.1',
          protocol: 'http:',
          [Symbol(kCapture)]: false,
          [Symbol(kNeedDrain)]: false,
          [Symbol(corked)]: 0,
          [Symbol(kOutHeaders)]: [Object: null prototype] {
            host: [Array],
            'accept-encoding': [Array]
          }
        },
        text: '{"message":"Maximum call stack size exceeded"}',
        files: undefined,
        buffered: true,
        headers: {
          'x-powered-by': 'Express',
          'access-control-allow-origin': '*',
          'content-type': 'application/json; charset=utf-8',
          'content-length': '46',
          etag: 'W/"2e-X3zJs0jkIN5bQQ47uekEYThPoWI"',
          date: 'Sat, 19 Feb 2022 14:28:16 GMT',
          connection: 'close'
        },
        header: {
          'x-powered-by': 'Express',
          'access-control-allow-origin': '*',
          'content-type': 'application/json; charset=utf-8',
          'content-length': '46',
          etag: 'W/"2e-X3zJs0jkIN5bQQ47uekEYThPoWI"',
          date: 'Sat, 19 Feb 2022 14:28:16 GMT',
          connection: 'close'
        },
        statusCode: 500,
        status: 500,
        statusType: 5,
        info: false,
        ok: false,
        redirect: false,
        clientError: false,
        serverError: true,
        error: Error: cannot GET /books/6210ddbec9d100f41a460311 (500)
            at Response.toError (/Users/heechankang/projects/nodejs/TDD_220219/kyobo_back_mongo-0.1/node_modules/superagent/src/node/response.js:110:17)
            at Response._setStatusProperties (/Users/heechankang/projects/nodejs/TDD_220219/kyobo_back_mongo-0.1/node_modules/superagent/src/response-base.js:107:48)
            at new Response (/Users/heechankang/projects/nodejs/TDD_220219/kyobo_back_mongo-0.1/node_modules/superagent/src/node/response.js:41:8)
            at Test._emitResponse (/Users/heechankang/projects/nodejs/TDD_220219/kyobo_back_mongo-0.1/node_modules/superagent/src/node/index.js:935:20)
            at fn (/Users/heechankang/projects/nodejs/TDD_220219/kyobo_back_mongo-0.1/node_modules/superagent/src/node/index.js:1137:38)
            at IncomingMessage.<anonymous> (/Users/heechankang/projects/nodejs/TDD_220219/kyobo_back_mongo-0.1/node_modules/superagent/src/node/parsers/json.js:19:7)
            at IncomingMessage.emit (node:events:402:35)
            at endReadableNT (node:internal/streams/readable:1343:12)
            at processTicksAndRejections (node:internal/process/task_queues:83:21) {
          status: 500,
          text: '{"message":"Maximum call stack size exceeded"}',
          method: 'GET',
          path: '/books/6210ddbec9d100f41a460311'
        },
        created: false,
        accepted: false,
        noContent: false,
        badRequest: false,
        unauthorized: false,
        notAcceptable: false,
        forbidden: false,
        notFound: false,
        unprocessableEntity: false,
        type: 'application/json',
        charset: 'utf-8',
        links: {},
        setEncoding: [Function: bound ],
        redirects: [],
        _body: { message: 'Maximum call stack size exceeded' },
        pipe: [Function (anonymous)],
        [Symbol(kCapture)]: false
      }